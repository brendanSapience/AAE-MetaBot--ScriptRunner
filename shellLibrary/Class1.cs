using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace shellLibrary
{

    public class CmdResponse {
        public String Result { get; set; } = "";

        public int RetCode { get; set; } = -999;

    }

    public class Class1
    {

        public String run_cmd(string interpreter, string cmd, string args)
        {
            CmdResponse myresult = new CmdResponse();
            
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = interpreter;
            start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    
                    myresult.Result = result;
                    myresult.RetCode = process.ExitCode;
                    return prettyprintresponse(myresult);
                }
            }
            return prettyprintresponse(myresult);
        }

        public String prettyprintresponse(CmdResponse res)
        {
            String RESP = res.RetCode + "|" + res.Result;
            return RESP;

        }
    }
}
